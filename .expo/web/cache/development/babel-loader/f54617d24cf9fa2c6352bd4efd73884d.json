{"ast":null,"code":"var _jsxFileName = \"/home/jmurphy/Documentos/Code/proyectos/identihack/front/front-civi/screens/TabOneScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport EditScreenInfo from \"../components/EditScreenInfo\";\nimport { Text, View } from \"../components/Themed\";\nexport default function TabOneScreen() {\n  var links = {\n    login: {\n      deepLink: \"aidi://login\",\n      dynamicLink: \"{\\\"algo\\\": \\\"nada\\\"}\"\n    },\n    credentials: {\n      deepLink: \"aidi://credentials/ronda\",\n      dynamicLink: \"\"\n    },\n    playstore: \"https://play.google.com/apps/internaltest/4699395559909911910\",\n    urlPlaystore: \"https://play.google.com/store/apps/details?id=com.aidi\"\n  };\n\n  var onLoginWithAidi = function onLoginWithAidi() {\n    return _regeneratorRuntime.async(function onLoginWithAidi$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Linking.openURL(links.login.deepLink).catch(function _callee() {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Tab One\"), React.createElement(Button, {\n    onPress: onLoginWithAidi,\n    title: \"qweqwe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Conectar\"), React.createElement(View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(EditScreenInfo, {\n    path: \"/screens/TabOneScreen.tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/home/jmurphy/Documentos/Code/proyectos/identihack/front/front-civi/screens/TabOneScreen.tsx"],"names":["React","EditScreenInfo","Text","View","TabOneScreen","links","login","deepLink","dynamicLink","credentials","playstore","urlPlaystore","onLoginWithAidi","Linking","openURL","catch","styles","container","title","separator","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginVertical","height","width"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAQA,OAAOC,cAAP;AACA,SAASC,IAAT,EAAeC,IAAf;AAGA,eAAe,SAASC,YAAT,GAAwB;AACnC,MAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,cADL;AAELC,MAAAA,WAAW;AAFN,KADK;AAKZC,IAAAA,WAAW,EAAE;AACXF,MAAAA,QAAQ,4BADG;AAEXC,MAAAA,WAAW;AAFA,KALD;AASZE,IAAAA,SAAS,EAAE,+DATC;AAUZC,IAAAA,YAAY,EAAE;AAVF,GAAd;;AAcH,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,OAAR,CAAgBT,KAAK,CAACC,KAAN,CAAYC,QAA5B,EAAsCQ,KAAtC,CAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5C;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAiBC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEN,eADb;AAC8B,IAAA,KAAK,EAAC,QADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACG,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Linking,\n  Button\n} from \"react-native\";\n//import Config from \"react-native-config\";\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\n\nexport default function TabOneScreen() {\n    const links = {\n      login: {\n        deepLink: \"aidi://login\",\n        dynamicLink: `{\"algo\": \"nada\"}`,\n      },\n      credentials: {\n        deepLink: `aidi://credentials/ronda`,\n        dynamicLink: ``,\n      },\n      playstore: \"https://play.google.com/apps/internaltest/4699395559909911910\",\n      urlPlaystore: \"https://play.google.com/store/apps/details?id=com.aidi\",\n    };\n\n\n const onLoginWithAidi = async () => {\n    Linking.openURL(links.login.deepLink).catch(async () => {\n      //const isInstalled = await AppInstalledChecker.isAppInstalledAndroid(\n      //  \"com.aidi\"\n      //);\n\n      //setNeedUpdate(isInstalled);\n\n      //const name = isInstalled ? \"ModalUpdateAidi\" : \"ModalInstallAidi\";\n      //analytics().logScreenView({\n      //  screen_class: name,\n      //  screen_name: name,\n      //});\n\n      //return setModalVisible(true);\n    });\n  };\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab One</Text>\n        <Button\n            onPress={onLoginWithAidi} title=\"qweqwe\">\n            Conectar\n        </Button>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabOneScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}